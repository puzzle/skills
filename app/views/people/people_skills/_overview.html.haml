%p.d-flex.align-items-center.profile-header
  = "#{PeopleSkill.model_name.human(count: @person.people_skills.count)} (#{@person.people_skills.count})"

%div.ms-3
  = form_with(url: person_people_skills_path(@person), method: :get, data: {controller: "filter", turbo_frame: "people-skills"}) do |f|
    %span.btn-group
      - rating = request.query_parameters[:rating]
      = f.radio_button :rating, 1, class: "btn-check", checked: rating == "1",
            onClick: "this.form.requestSubmit()", data: {action: "change->filter#submit"}
      = f.label :rating, ti("filter.all"), value: 1, class: "btn btn-outline-primary"

      = f.radio_button :rating, 0, class: "btn-check", checked: rating == "0",
            onClick: "this.form.requestSubmit()", data: {action: "change->filter#submit"}
      = f.label :rating, ti("filter.rated"), value: 0, class: "btn btn-outline-primary"

      = f.radio_button :rating, -1, class: "btn-check", checked: rating == "-1",
            onClick: "this.form.requestSubmit()", data: {action: "change->filter#submit"}
      = f.label :rating, ti("filter.unrated"), value: -1, class: "btn btn-outline-primary"

  = turbo_frame_tag 'people-skills' do
    - people_skills_by_category(person_people_skills).each do |parent_category, child_categories|
      %div.profile-header.mw-100.border-bottom.mt-4{id: parent_category.title.parameterize, "data-scroll-target": "scrollItem"}
        = parent_category.title
      = render "skills_by_category", child_categories:
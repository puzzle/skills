!!!
%html
  %head
    // This disables the Turbo prefetch in development as it gets quite annoying when debugging
    - if Rails.env.development?
      %meta{:name => "turbo-prefetch", :content => "false"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %title PuzzleSkills
    %meta{:content => "width=device-width,initial-scale=1", :name => "viewport"}/
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag "application", "data-turbo-track": "reload"
    = javascript_include_tag "application", "data-turbo-track": "reload", type: "module"
    = javascript_include_tag "application", "bundle.js", type: "module"
    = favicon_link_tag "favicon.png"
  %body#dropdown-wormhole.d-flex.justify-content-center{"data-controller": "skills-empty-space"}
    %div.content{"data-skills-empty-space-target": "container"}
      %div.position-sticky.top-0.z-3
        %pzsh-topbar
          = link_to root_path, class: "text-decoration-none text-dark" do
            %div.d-flex
              %div.mb-1.mt-1
                %img{:src=> "/assets/logo.svg",:height=>"42"}
              %text.d-flex.align-items-end.ms-2.small.text-white= "5.1.0"
          %pzsh-menu
            %div{slot: 'actions'}
              %pzsh-menu-dropdown
                %div{slot: 'toggle'}
                  = language(I18n.locale.to_s.upcase)
                %div{slot: 'items'}
                  - language_selector.each do |lang_name, switch_url|
                    %pzsh-menu-dropdown-item{href: switch_url}
                      = lang_name
              - if Rails.env.development?
                %span#username.text-white
                  - if devise?
                    = ti("devise.devise")
                  - else
                    = ti("devise.mockdata")
              - if conf_admin?
                %pzsh-menu-action{href: admin_index_path}
                  %pzsh-icon{name: 'sliders-v-alt'}
                  = ti("devise.admin_panel")
              %pzsh-menu-action{href: 'https://github.com/puzzle/skills/issues'}
                %pzsh-icon{name: 'question-circle'}
                Help
              - if auth_user_signed_in?
                %pzsh-menu-dropdown{href: '#'}
                  %div{slot: 'toggle'}
                    %pzsh-icon{name: 'user'}
                    = current_auth_user&.name || current_auth_user&.email
                  %div{slot: 'items'}
                    - if devise?
                      %pzsh-menu-dropdown-item{href: destroy_auth_user_session_path, data: { "turbo-method": :delete }}
                        %pzsh-icon{name: 'sign-out-alt'}
                        = ti("devise.sign_out")
                    - unless find_person_by_auth_user.nil?
                      %pzsh-menu-dropdown-item{href: person_path(find_person_by_auth_user)}
                        %pzsh-icon{name: 'setting'}
                        = ti("devise.profile")
              - elsif devise_mapping.omniauthable?
                =button_to ti("devise.sign_in"), omniauth_authorize_path(resource_name, resource_class.omniauth_providers.first), {data: { "turbo": false, controller: "instant-click" }, class: "btn btn-link"}
          %pzsh-menu-action.d-flex.cursor-pointer.h-100.ps-2.pe-2{"data-action": "click->skills-empty-space#goCrazy"}
        %div.puzzle-header
          %div.d-flex.h-100
            = render "application/tabbar", tabs: global_tabs, bar_class: "skills-navbar", active_path: global_navbar_path
      %div.container-fluid
        %div.row.d-flex.justify-content-center
          %span#flash-messages
            = render partial: 'layouts/flash', collection: [:notice, :alert], as: :level
          - content_for(:actions) do
            %span
              = yield :actions
          = content_for?(:content) ? yield(:content) : yield

          = turbo_frame_tag "remote_modal", target: "_top"
